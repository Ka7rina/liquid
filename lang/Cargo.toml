[package]
name = "liquid_lang"
version = "0.2.0"
authors = ["vita-dounai <lichenxi.webank@gmail.com>"]
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
paste = "0.1.17"
scale = { package = "parity-scale-codec", version = "1.3.1", default-features = false, features = ["derive", "full"] }
cfg-if = "0.1.10"
derive_more = "0.99.9"
chrono = { version = "0.4.13", optional = true }
lazy_static = "1.4.0"
spin = "0.7.0"

liquid_macro = { version = "0.2.0", path = "../macro", default-features = false }
liquid_abi_codec = { version = "0.2.0", path = "../abi-codec", default-features = false, optional = true }
liquid_primitives = { version = "0.2.0", path = "../primitives", default-features = false }
liquid_prelude = { version = "0.2.0", path = "../prelude", default-features = false }
liquid_ty_mapping = { version = "0.2.0", path = "../ty_mapping", default-features = false }
liquid_abi_gen = { version = "0.2.0", path = "../abi-gen", default-features = false, optional = true }
liquid_lang_macro = { version = "0.2.0", path = "macro", default-features = false }
liquid_alloc = { version = "0.2.0", path = "../alloc", default-features = false }

[dev-dependencies]
hex-literal = "0.2.1"
pretty_assertions = "0.6.1"
trybuild = "1.0.30"
predicates = "1.0.5"
serial_test = "0.5.1"

liquid_abi_codec = { version = "0.2.0", path = "../abi-codec", default-features = false }

[features]
default = ["std"]
std = [
    "liquid_macro/std",
    "liquid_abi_gen/std",
    "liquid_abi_codec/std",
    "liquid_primitives/std",
    "liquid_prelude/std",
    "liquid_lang_macro/std",
    "liquid_alloc/std",
    "chrono",
]
liquid-abi-gen = [
    "std",
    "liquid_abi_gen",
]
gm = [
    "liquid_lang_macro/gm",
    "liquid_primitives/gm",
]
contract = [
    "liquid_ty_mapping/contract",
    "liquid_primitives/contract",
    "liquid_lang_macro/contract",
    "liquid_abi_gen/contract",
]
solidity-compatible = [
    "liquid_abi_codec",
    "liquid_lang_macro/solidity-compatible",
    "liquid_abi_gen/solidity-compatible",
]
solidity-interface = [
    "liquid_abi_codec",
    "liquid_lang_macro/solidity-interface",
]
collaboration = [
    "liquid_abi_codec",
    "liquid_lang_macro/collaboration",
    "liquid_macro/collaboration",
    "liquid_abi_gen/collaboration",
]

[[test]]
name = "collaboration"
path = "tests/collaboration/tests.rs"
required-features = ["collaboration"]

[[test]]
name = "contract"
path = "tests/contract/tests-liq.rs"
required-features = ["contract", "solidity-interface"]

[[test]]
name = "contract-sol"
path = "tests/contract/tests-sol.rs"
required-features = ["contract", "solidity-compatible"]

[[test]]
name = "derive"
path = "tests/derive/tests-liq.rs"
required-features = ["contract", "solidity-interface"]

[[test]]
name = "derive-sol"
path = "tests/derive/tests-sol.rs"
required-features = ["contract", "solidity-compatible"]